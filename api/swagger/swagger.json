{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generate new access and refresh tokens using a valid refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tokens refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid refresh token",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Creates a new user account through Keycloak identity provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.RegisterSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - Username or email already exists",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to create user",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_auth.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of users using offset-based pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get users with pagination",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Number of users per page (1-100, default: 10)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Starting position for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully with next_offset for continuation",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.BatchGetUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid pagination parameters or negative offset",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions to list users",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to retrieve users",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.GetCurrentUserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found - User not found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to retrieve user",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input data or User ID is required",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized to update this user",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found - User not found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - Username or email already exists",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to update user",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete the authenticated user's account from Keycloak",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.DeleteUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - User ID is required",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized to delete this user",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found - User not found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to delete user",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the authenticated user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password change details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ChangePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid input data or password policy violation",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated or incorrect current password",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not authorized to change this user's password",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found - User not found",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - Failed to update password",
                        "schema": {
                            "$ref": "#/definitions/internal_handlers_users.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_handlers_auth.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "internal_handlers_auth.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_handlers_auth.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "internal_handlers_auth.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "internal_handlers_auth.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "internal_handlers_auth.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "SecurePass123!"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "johndoe"
                }
            }
        },
        "internal_handlers_auth.RegisterSuccessResponse": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "ID": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                },
                "Message": {
                    "type": "string",
                    "example": "User created successfully"
                },
                "Username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "internal_handlers_users.BatchGetUsersResponse": {
            "type": "object",
            "properties": {
                "next_offset": {
                    "type": "integer",
                    "example": 20
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_handlers_users.User"
                    }
                }
            }
        },
        "internal_handlers_users.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "current_password",
                "new_password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "example": "newSecurePass456"
                },
                "current_password": {
                    "type": "string",
                    "example": "currentPass123"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "newSecurePass456"
                }
            }
        },
        "internal_handlers_users.ChangePasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Password updated successfully"
                }
            }
        },
        "internal_handlers_users.DeleteUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                },
                "message": {
                    "type": "string",
                    "example": "User deleted successfully"
                }
            }
        },
        "internal_handlers_users.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "internal_handlers_users.GetCurrentUserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "emailVerified": {
                    "type": "boolean",
                    "example": true
                },
                "enabled": {
                    "type": "boolean",
                    "example": true
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_handlers_users.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.updated@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "johndoe_updated"
                }
            }
        },
        "internal_handlers_users.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.updated@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                },
                "message": {
                    "type": "string",
                    "example": "User updated successfully"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe_updated"
                }
            }
        },
        "internal_handlers_users.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter the token in the format: Bearer \u003cyour-token-here\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}