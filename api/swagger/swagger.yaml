definitions:
  internal_handlers_auth.ErrorResponse:
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
  internal_handlers_auth.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: john_doe
        type: string
    required:
    - password
    - username
    type: object
  internal_handlers_auth.LoginResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        example: 3600
        type: integer
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  internal_handlers_auth.RefreshTokenRequest:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - refresh_token
    type: object
  internal_handlers_auth.RefreshTokenResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        example: 3600
        type: integer
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  internal_handlers_auth.RegisterRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: SecurePass123!
        minLength: 8
        type: string
      username:
        example: johndoe
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  internal_handlers_auth.RegisterSuccessResponse:
    properties:
      Email:
        example: john.doe@example.com
        type: string
      ID:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      Message:
        example: User created successfully
        type: string
      Username:
        example: johndoe
        type: string
    type: object
  internal_handlers_users.ChangePasswordRequest:
    properties:
      confirm_password:
        example: newSecurePass456
        type: string
      current_password:
        example: currentPass123
        type: string
      new_password:
        example: newSecurePass456
        minLength: 8
        type: string
    required:
    - confirm_password
    - current_password
    - new_password
    type: object
  internal_handlers_users.ChangePasswordResponse:
    properties:
      message:
        example: Password updated successfully
        type: string
    type: object
  internal_handlers_users.DeleteUserResponse:
    properties:
      id:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      message:
        example: User deleted successfully
        type: string
    type: object
  internal_handlers_users.ErrorResponse:
    properties:
      error:
        example: Invalid credentials
        type: string
    type: object
  internal_handlers_users.GetCurrentUserResponse:
    properties:
      createdTimestamp:
        example: 1640995200000
        type: integer
      email:
        example: john.doe@example.com
        type: string
      emailVerified:
        example: true
        type: boolean
      enabled:
        example: true
        type: boolean
      firstName:
        example: John
        type: string
      id:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      lastName:
        example: Doe
        type: string
      username:
        example: john_doe
        type: string
    type: object
  internal_handlers_users.UpdateUserRequest:
    properties:
      email:
        example: john.updated@example.com
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      username:
        example: johndoe_updated
        maxLength: 50
        minLength: 3
        type: string
    type: object
  internal_handlers_users.UpdateUserResponse:
    properties:
      email:
        example: john.updated@example.com
        type: string
      id:
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      message:
        example: User updated successfully
        type: string
      username:
        example: johndoe_updated
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/internal_handlers_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/internal_handlers_auth.LoginResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
      summary: User login
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate new access and refresh tokens using a valid refresh token
      parameters:
      - description: Refresh token details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handlers_auth.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens refreshed successfully
          schema:
            $ref: '#/definitions/internal_handlers_auth.RefreshTokenResponse'
        "400":
          description: Bad request - Invalid input data
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
        "401":
          description: Unauthorized - Invalid refresh token
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
      summary: Refresh access token
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account through Keycloak identity provider
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handlers_auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/internal_handlers_auth.RegisterSuccessResponse'
        "400":
          description: Bad request - Invalid input data
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
        "409":
          description: Conflict - Username or email already exists
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
        "500":
          description: Internal server error - Failed to create user
          schema:
            $ref: '#/definitions/internal_handlers_auth.ErrorResponse'
      summary: Register a new user
      tags:
      - Authentication
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the authenticated user's account from Keycloak
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/internal_handlers_users.DeleteUserResponse'
        "400":
          description: Bad request - User ID is required
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "403":
          description: Forbidden - Not authorized to delete this user
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "500":
          description: Internal server error - Failed to delete user
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete user account
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handlers_users.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            $ref: '#/definitions/internal_handlers_users.UpdateUserResponse'
        "400":
          description: Bad request - Invalid input data or User ID is required
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "403":
          description: Forbidden - Not authorized to update this user
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "409":
          description: Conflict - Username or email already exists
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "500":
          description: Internal server error - Failed to update user
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - Users
  /users/{id}/password:
    put:
      consumes:
      - application/json
      description: Change the authenticated user's password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Password change details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handlers_users.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            $ref: '#/definitions/internal_handlers_users.ChangePasswordResponse'
        "400":
          description: Bad request - Invalid input data or password policy violation
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "401":
          description: Unauthorized - User not authenticated or incorrect current
            password
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "403":
          description: Forbidden - Not authorized to change this user's password
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "500":
          description: Internal server error - Failed to update password
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - Users
  /users/current:
    get:
      consumes:
      - application/json
      description: Get the authenticated user's profile information
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/internal_handlers_users.GetCurrentUserResponse'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "404":
          description: Not found - User not found
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
        "500":
          description: Internal server error - Failed to retrieve user
          schema:
            $ref: '#/definitions/internal_handlers_users.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: 'Enter the token in the format: Bearer <your-token-here>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
