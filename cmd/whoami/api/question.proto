syntax = "proto3";

package question;

option go_package = "whoami-server/protogen/golang/question";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/http.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service QuestionService {
  rpc AddStream(stream Question) returns (stream Question) {
    option (google.api.http) = {
      post: "/api/v1/questions/add"
      body: "*"
    };
  }

  rpc GetByQuizID(GetByQuizIDRequest) returns (GetByQuizIDResponse) {
    option (google.api.http) = {
      get: "/api/v1/quizzes/{quiz_id}/questions"
    };
  }

  rpc EvaluateAnswers(EvaluateAnswersRequest) returns (EvaluateAnswersResponse) {
    option (google.api.http) = {
      post: "/api/v1/quizzes/{quiz_id}/evaluate"
      body: "*"
    };
  }

  rpc GetStream(google.protobuf.Empty) returns (stream Question) {}
}

message Question {
  string id = 1;
  string quiz_id = 2;
  string body = 3;
  map<string, OptionWeights> options_weights = 4;
}

message OptionWeights {
  repeated float weights = 1;
}

message Quiz {
  string id = 1;
  string title = 2;
  repeated string results = 3;
}

message Answer {
  string quiz_id = 1;
  string question_id = 2;
  string body = 3;
}

message GetBatchRequest {
  int32 page_size = 1;
  string page_token = 2;
}

message GetBatchResponse {
  repeated Question questions = 1;
  string next_page_token = 2;
}

message GetByQuizIDRequest {
  string quiz_id = 1;
  int32 page_size = 2;
  string page_token = 3;
}

message GetByQuizIDResponse {
  repeated Question questions = 1;
  string next_page_token = 2;
}

message EvaluateAnswersRequest {
  repeated Answer answers = 1;
  string quiz_id = 2;
}

message EvaluateAnswersResponse {
  string result = 1;
  string description = 2;
}
